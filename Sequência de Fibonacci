.data
espaco: .asciiz " "
nextL: .asciiz "\n"
.text 
	main:
		li $s0, 0         # primeiro numero de fibonacci
		li $s1, 1         # segundo numero de fibonacci
		
		li $v0, 5         # lendo quantos número serão impressos
		syscall
		move $s6, $v0     # $s6 é quantos números de fibonacci serão impressos	
		
		li $s7, 0
		
		bge $s6, 0, fibo0  # se $s6 >= 0 pula pra fibo0
		j fim
	
	fibo0:
		li $v0, 1
		la $a0, ($s0)      # imprimindo primeiro elemento da sequência
		syscall	
		
		li $v0, 4
		la $a0, espaco 	  # imprimindo um espaço entre eles
		syscall
		
		bge $s6, 1, fibo1 # se $s6 >= 1 pula pra fibo1
		
		j fim
		
	fibo1:
		li $v0, 1
		la $a0, ($s1)      # imprimindo segundo elemento da sequência
		syscall	
		
		li $v0, 4
		la $a0, espaco 	  # imprimindo um espaço entre eles
		syscall
		
		bge $s6, 2, fibo2  # se $s6 >= 2 pula pra fibo2
		
		j fim	
	fibo2:
		li $v0, 1
		la $a0, ($s1)      # imprimindo terceiro elemento da sequência
		syscall	
		
		li $v0, 4
		la $a0, espaco 	   # imprimindo um espaço entre eles
		syscall
		
		li $s0, 1 	   # transformando $s0 = 1, caso a linha 54 for verdadeira
		addi $s7, $s7, 2   # declarando o contador + 2(pois ja foram imprimidos 3 numeros f0, f1, f2)
		bgt $s6, 2, fibo3  # se $s6 > 2 pula pra fibo3
		
		j fim
		
	fibo3:
		beq $s6, $s7, fim  # enquanto $s7(Contador) == $s6(numero de vezes que ira rodar a sequência)
		add $s2, $s0, $s1  # Fn = Fn-1 + Fn - 2 em $s2(registrador escolhido para salvar os números da sequência)
		
		li $v0, 1
		la $a0, ($s2)      # imprimindo ultimo elemento calculado na sequência
		syscall	
		
		li $v0, 4
		la $a0, espaco 	  # imprimindo um espaço entre eles
		syscall	
		
		addi $s0, $s1, 0   # adiciona Fn-2 ao $s0
		addi $s1, $s2, 0   # adiciona Fn-1 ao $s1 
		addi $s7, $s7, 1   #incrementando o contador
		
		j fibo3
		
	fim:
		li $v0, 4
		la $a0, nextL
		syscall
		
		li $v0, 10
		syscall
	
		
		
		
		
